{"version":3,"sources":["components/ActiveInfo/DeviceBattery.js","components/ActiveInfo/DeviceConnection.js","components/ActiveInfo/helpers.js","components/ActiveInfo/ListeningTo.js","components/ActiveInfo/YoutubeVideo.js","components/ActiveInfo/index.js","config/storeSecret.js","config/firebase.js","components/DebugFirebase.js","index.js"],"names":["DeviceBattery","_ref","lastKnownBattery","isCharging","react_default","a","createElement","Container","Row","DeviceConnection","isWifi","network","readableNetwork","concat","iftttDateOrUndefined","iftttTimestamp","parsedDate","moment","iftttDate","isValid","undefined","ColYoutube","styled","Col","_templateObject","ListeningTo","albumName","artistName","songName","timestamp","sm","alt","href","encodeURI","target","rel","index_es","icon","size","StyledContainer","YoutubeVideo_templateObject","getYoutubeVideoId","url","replace","split","YoutubeVideo","YouTube","videoId","Timestamp","section","ActiveInfo_templateObject","recalculateLastTimestamp","device","lastTimestamp","_","get","Object","objectSpread","deviceNameWithRecentTimestamp","devices","recentTimestamp","chain","values","map","max","value","findKey","tabTitle","deviceName","Fragment","dist_default","date","fromNow","ActiveInfo","activeInfo","mapValues","Tabs","defaultActiveKey","id","keys","index","connection","listeningTo","myChevrolet","likedYoutubeVideoUrl","at","Tab","eventKey","title","ActiveInfo_DeviceConnection","ActiveInfo_DeviceBattery","ActiveInfo_YoutubeVideo","ActiveInfo_ListeningTo","JSON","stringify","toString","getFirebaseApiKey","cachedApiKey","localStorage","getItem","apiKey","prompt","length","setItem","firebaseConfig","databaseURL","firebase","databaseRef","ref","activeInfoRef","child","GoogleAuthProvider","StyledParagraph","p","DebugFirebase_templateObject","DebugFirebase","React","memo","data","lastUpdated","now","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","on","snapshot","setState","val","library","add","fab","className","components_DebugFirebase","components_ActiveInfo","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"4QAYeA,EATO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,iBAAkBC,EAArBF,EAAqBE,WAArB,OACpBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,iBACYN,EADZ,MAEkB,IAAfC,EAAsB,WAAa,YAFtC,OCUWM,EAZU,SAAAR,GAAyB,IAAtBS,EAAsBT,EAAtBS,OAAQC,EAAcV,EAAdU,QAC5BC,EAAkBD,EAAO,GAAAE,OACxBF,EADwB,KAAAE,QACF,IAAXH,GAAmB,UACjC,cAEJ,OACEN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,oBAAkBI,8BCLXE,EAAuB,SAAAC,GAClC,IAAMC,EAJiB,SAAAD,GAAc,OACrCE,IAAOF,EAAgB,uBAGJG,CAAUH,GAC7B,OAAOC,EAAWG,UAAYH,OAAaI,+KCF7C,IAAMC,EAAaC,YAAOC,IAAPD,CAAHE,KAsCDC,EA7BK,SAAAxB,GAAA,IAAGyB,EAAHzB,EAAGyB,UAAWC,EAAd1B,EAAc0B,WAAYC,EAA1B3B,EAA0B2B,SAA1B3B,EAAoC4B,UAApC,OAClBzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACE,EAAA,EAAD,eAAakB,GACbtB,EAAAC,EAAAC,cAACE,EAAA,EAAD,gBAAcmB,GACdvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,cAAYoB,IAEdxB,EAAAC,EAAAC,cAACe,EAAD,CAAYS,GAAI,GACd1B,EAAAC,EAAAC,cAAA,KACEyB,IAAI,kBACJC,KAAI,gDAAAnB,OAAkDoB,UACpDL,IAEFM,OAAO,SACPC,IAAI,uBAEJ/B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,WAAYC,KAAK,QAElDlC,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,oLC9BZ,IAAMiC,EAAkBjB,YAAOf,IAAPe,CAAHkB,KAYfC,EAAoB,SAAAC,GAYxB,YANetB,KAHfsB,EAAMA,EACHC,QAAQ,UAAW,IACnBC,MAAM,0CACD,GACDF,EAAI,GAAGE,MAAM,gBACV,GAEHF,GAKMG,EAtBM,SAAA5C,GAAA,IAAGyC,EAAHzC,EAAGyC,IAAH,OACnBtC,EAAAC,EAAAC,cAACiC,EAAD,KACEnC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAASC,QAASN,EAAkBC,gKCCxC,IAAMM,EAAY1B,IAAO2B,QAAVC,KAiDTC,EAA2B,SAAAC,GAC/B,IAAMC,EACJvC,EAAqBwC,IAAEC,IAAIH,EAAQ,2BACnCtC,EAAqBwC,IAAEC,IAAIH,EAAQ,yBACnCnC,IAAOmC,EAAOC,eAChB,OAAOG,OAAAC,EAAA,EAAAD,CAAA,GACFJ,EADL,CAEEC,mBAIEK,EAAgC,SAAAC,GACpC,IAAMC,EAAkBN,IAAEO,MAAMF,GAC7BG,SACAC,IAAI,iBACJC,MACAC,QACH,OAAOX,IAAEY,QAAQP,EAAS,CAAEN,cAAeO,KAGvCO,EAAW,SAACC,EAAYhB,GAAb,OACfhD,EAAAC,EAAAC,cAACF,EAAAC,EAAMgE,SAAP,KACGD,EACDhE,EAAAC,EAAAC,cAAC0C,EAAD,KACE5C,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,WAAa,IAC5CjC,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQkE,KAAMnB,EAAOC,cAAemB,SAAO,OAMlCC,EA1EI,SAAAxE,GAAoB,IAAjByE,EAAiBzE,EAAjByE,WACdf,EAAUL,IAAEqB,UAAUD,EAAWf,QAASR,GAChD,OACE/C,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACEC,iBAAkBnB,EAA8BC,GAChDmB,GAAG,oBAEFxB,IAAEyB,KAAKpB,GAASI,IAAI,SAACK,EAAYY,GAChC,IAAM5B,EAASO,EAAQS,GAErBa,EAME7B,EANF6B,WACA9E,EAKEiD,EALFjD,WACAD,EAIEkD,EAJFlD,iBACAmD,EAGED,EAHFC,cACA6B,EAEE9B,EAFF8B,YACAC,EACE/B,EADF+B,YAEIC,EAAuB9B,IAAE+B,GAAGjC,EAAQ,iBAAiB,GAE3D,OACEhD,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAKC,SAAUnB,EAAYoB,MAAOrB,EAASC,EAAYhB,IACrDhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG0E,GAAc7E,EAAAC,EAAAC,cAACmF,EAAqBR,GACpC/E,GACCE,EAAAC,EAAAC,cAACoF,EAAkB,CAAExF,mBAAkBC,eAExCiF,GACChF,EAAAC,EAAAC,cAACqF,EAAD,CAAcjD,IAAK0C,IAEpBF,GAAe9E,EAAAC,EAAAC,cAACsF,EAAgBV,GAChCC,GAAe/E,EAAAC,EAAAC,cAAA,WAAMuF,KAAKC,UAAUX,EAAa,EAAG,IACpD9B,GACCjD,EAAAC,EAAAC,cAAC0C,EAAD,sBAA0BK,EAAc0C,kBCjD3CC,EAAoB,WAC/B,IAAMC,EAAeC,aAAaC,QAHJ,oBAI9B,IAAKF,EAAc,CACjB,IAAMG,EAASC,OAAO,uCACtB,GAAID,EAAOE,OAAS,GAGlB,OADAJ,aAAaK,QARa,mBAQaH,GAChCA,EAGX,OAAOH,WCTLO,EAAiB,CACnBJ,OAAQJ,IACRS,YAAa,yCAEfC,gBAAuBF,GAEvB,IAAMG,EAAcD,aAAoBE,MAC3BC,EAAgBF,EAAYG,MAAM,qBACfH,EAAYG,MAAM,wBACvBH,EAAYG,MAAM,mBAEtBJ,SACC,IAAIA,OAAcK,gNCT1C,IAAMC,EAAkB1F,IAAO2F,EAAVC,KAmBNC,EAXOC,IAAMC,KAAK,SAAApH,GAAcA,EAAXqH,KAAW,IACvCC,EAActG,IAAOuG,MAC3B,OACEpH,EAAAC,EAAAC,cAAC0G,EAAD,iBACYhB,IACV5F,EAAAC,EAAAC,cAAA,WAFF,sBAGqBF,EAAAC,EAAAC,cAACgE,EAAAjE,EAAD,CAAQkE,KAAMgD,EAAa/C,SAAO,wCCXrDiD,uBACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAAqE,KAAAJ,IACjBE,EAAAnE,OAAAsE,EAAA,EAAAtE,CAAAqE,KAAArE,OAAAuE,EAAA,EAAAvE,CAAAiE,GAAAO,KAAAH,KAAMH,KACDO,MAAQ,CACXvD,gBAAYtD,GAHGuG,mFAOC,IAAAO,EAAAL,KAClBhB,EAAcsB,GAAG,QAAS,SAAAC,GACxBF,EAAKG,SAAS,CACZ3D,WAAY0D,EAASE,UAIzBC,IAAQC,IAAIC,sCAGL,IACC/D,EAAemD,KAAKI,MAApBvD,WACR,OACEtE,EAAAC,EAAAC,cAAA,OAAKoI,UAAU,OACbtI,EAAAC,EAAAC,cAACqI,EAAD,CAAerB,KAAM5C,IACpBA,GAActE,EAAAC,EAAAC,cAACsI,EAAe,CAAElE,uBAvBvB0C,IAAMyB,YA6BlBC,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO9I,EAAAC,EAAAC,cAAC6I,GAAD,MAASL","file":"static/js/main.dcc39514.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\nconst DeviceBattery = ({ lastKnownBattery, isCharging }) => (\n  <Container>\n    <Row>\n      Battery: {lastKnownBattery} (\n      {isCharging === true ? \"Charging\" : \"Unplugged\"})\n    </Row>\n  </Container>\n);\n\nexport default DeviceBattery;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\n\nconst DeviceConnection = ({ isWifi, network }) => {\n  const readableNetwork = network\n    ? `${network} ${isWifi === true && \"(WiFi)\"}`\n    : \"Mobile Data\";\n\n  return (\n    <Container>\n      <Row>Connection: {readableNetwork}</Row>\n    </Container>\n  );\n};\n\nexport default DeviceConnection;\n","import moment from \"moment\";\n\nexport const iftttDate = iftttTimestamp =>\n  moment(iftttTimestamp, \"MMMM DD, YYYY at LT\"); // January 11, 2019 at 03:27PM\n\nexport const iftttDateOrUndefined = iftttTimestamp => {\n  const parsedDate = iftttDate(iftttTimestamp);\n  return parsedDate.isValid() ? parsedDate : undefined;\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst ColYoutube = styled(Col)`\n  font-style: italic;\n  text-align: center;\n\n  .row {\n    display: block;\n  }\n`;\n\nconst ListeningTo = ({ albumName, artistName, songName, timestamp }) => (\n  <Container>\n    <Row>\n      <Col>\n        <Row>Album: {albumName}</Row>\n        <Row>Artist: {artistName}</Row>\n        <Row>Song: {songName}</Row>\n      </Col>\n      <ColYoutube sm={4}>\n        <a\n          alt=\"Play on Youtube\"\n          href={`https://www.youtube.com/results?search_query=${encodeURI(\n            songName\n          )}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Row>\n            <FontAwesomeIcon icon={[\"fab\", \"youtube\"]} size=\"3x\" />\n          </Row>\n          <Row>\n            <small>Play on Youtube</small>\n          </Row>\n        </a>\n      </ColYoutube>\n    </Row>\n  </Container>\n);\n\nexport default ListeningTo;\n","import { Container } from \"react-bootstrap\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport YouTube from \"react-youtube\";\n\nconst StyledContainer = styled(Container)`\n  border: dotted 1px;\n  text-align: center;\n`;\n\nconst YoutubeVideo = ({ url }) => (\n  <StyledContainer>\n    <YouTube videoId={getYoutubeVideoId(url)} />\n  </StyledContainer>\n);\n\n/* Helper */\nconst getYoutubeVideoId = url => {\n  // https://gist.github.com/takien/4077195\n  var ID = \"\";\n  url = url\n    .replace(/(>|<)/gi, \"\")\n    .split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n  if (url[2] !== undefined) {\n    ID = url[2].split(/[^0-9a-z_-]/i);\n    ID = ID[0];\n  } else {\n    ID = url;\n  }\n  return ID;\n};\n\nexport default YoutubeVideo;\n","import _ from \"lodash\";\nimport DeviceBattery from \"./DeviceBattery\";\nimport DeviceConnection from \"./DeviceConnection\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { iftttDateOrUndefined } from \"./helpers\";\nimport ListeningTo from \"./ListeningTo\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport YoutubeVideo from \"./YoutubeVideo\";\nimport { Container, Tab, Tabs } from \"react-bootstrap\";\n\nconst Timestamp = styled.section`\n  color: darkgray;\n  font-size: small;\n  font-style: italic;\n`;\n\nconst ActiveInfo = ({ activeInfo }) => {\n  const devices = _.mapValues(activeInfo.devices, recalculateLastTimestamp);\n  return (\n    <Tabs\n      defaultActiveKey={deviceNameWithRecentTimestamp(devices)}\n      id=\"active-info-tabs\"\n    >\n      {_.keys(devices).map((deviceName, index) => {\n        const device = devices[deviceName];\n        const {\n          connection,\n          isCharging,\n          lastKnownBattery,\n          lastTimestamp,\n          listeningTo,\n          myChevrolet\n        } = device;\n        const likedYoutubeVideoUrl = _.at(device, \"videoLike.url\")[0];\n\n        return (\n          <Tab eventKey={deviceName} title={tabTitle(deviceName, device)}>\n            <Container>\n              {connection && <DeviceConnection {...connection} />}\n              {lastKnownBattery && (\n                <DeviceBattery {...{ lastKnownBattery, isCharging }} />\n              )}\n              {likedYoutubeVideoUrl && (\n                <YoutubeVideo url={likedYoutubeVideoUrl} />\n              )}\n              {listeningTo && <ListeningTo {...listeningTo} />}\n              {myChevrolet && <pre>{JSON.stringify(myChevrolet, 2, 2)}</pre>}\n              {lastTimestamp && (\n                <Timestamp>Last updated: {lastTimestamp.toString()}</Timestamp>\n              )}\n            </Container>\n          </Tab>\n        );\n      })}\n    </Tabs>\n  );\n};\n\n/* Helpers */\nconst recalculateLastTimestamp = device => {\n  const lastTimestamp =\n    iftttDateOrUndefined(_.get(device, \"listeningTo.timestamp\")) ||\n    iftttDateOrUndefined(_.get(device, \"videoLike.timestamp\")) ||\n    moment(device.lastTimestamp);\n  return {\n    ...device,\n    lastTimestamp\n  };\n};\n\nconst deviceNameWithRecentTimestamp = devices => {\n  const recentTimestamp = _.chain(devices)\n    .values()\n    .map(\"lastTimestamp\")\n    .max()\n    .value();\n  return _.findKey(devices, { lastTimestamp: recentTimestamp });\n};\n\nconst tabTitle = (deviceName, device) => (\n  <React.Fragment>\n    {deviceName}\n    <Timestamp>\n      <FontAwesomeIcon icon={[\"far\", \"clock\"]} />{\" \"}\n      <Moment date={device.lastTimestamp} fromNow />\n    </Timestamp>\n  </React.Fragment>\n);\n\n/* Exports */\nexport default ActiveInfo;\n","export const FIREBASE_API_KEY = \"firebase_api_key\";\n\nexport const getFirebaseApiKey = () => {\n  const cachedApiKey = localStorage.getItem(FIREBASE_API_KEY);\n  if (!cachedApiKey) {\n    const apiKey = prompt(\"Please provide API Key for Firebase\");\n    if (apiKey.length > 38) {\n      // 39 to be precise\n      localStorage.setItem(FIREBASE_API_KEY, apiKey);\n      return apiKey;\n    }\n  }\n  return cachedApiKey;\n};\n","import { getFirebaseApiKey } from \"./storeSecret\";\nimport * as firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: getFirebaseApiKey(),\n  databaseURL: \"https://ameya-naik-com.firebaseio.com\"\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst databaseRef = firebase.database().ref();\nexport const activeInfoRef = databaseRef.child(\"public/activeInfo\");\nexport const homepageStatsRef = databaseRef.child(\"public/homepageStats\");\nexport const projectsRef = databaseRef.child(\"public/projects\");\n\nexport const authRef = firebase.auth();\nexport const provider = new firebase.auth.GoogleAuthProvider();\n","import { getFirebaseApiKey } from \"../config/storeSecret\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledParagraph = styled.p`\n  background: lightgrey;\n  border-bottom: solid;\n  font-size: small;\n  font-style: italic;\n  text-align: center;\n`;\n\nconst DebugFirebase = React.memo(({ data }) => {\n  const lastUpdated = moment.now();\n  return (\n    <StyledParagraph>\n      API Key: {getFirebaseApiKey()}\n      <br />\n      Data last updated: <Moment date={lastUpdated} fromNow />\n    </StyledParagraph>\n  );\n});\n\nexport default DebugFirebase;\n","import ActiveInfo from \"./components/ActiveInfo\";\nimport { activeInfoRef } from \"./config/firebase\";\nimport DebugFirebase from \"./components/DebugFirebase\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeInfo: undefined\n    };\n  }\n\n  componentDidMount() {\n    activeInfoRef.on(\"value\", snapshot => {\n      this.setState({\n        activeInfo: snapshot.val()\n      });\n    });\n\n    library.add(fab);\n  }\n\n  render() {\n    const { activeInfo } = this.state;\n    return (\n      <div className=\"App\">\n        <DebugFirebase data={activeInfo} />\n        {activeInfo && <ActiveInfo {...{ activeInfo }} />}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}